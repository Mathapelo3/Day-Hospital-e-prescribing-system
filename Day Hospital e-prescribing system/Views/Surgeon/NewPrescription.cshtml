@model Day_Hospital_e_prescribing_system.ViewModel.PrescriptionViewModel
@{
    ViewData["Title"] = "NewPrescription";
    Layout = "~/Views/Shared/SurgeonLayout.cshtml";
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

<div class="card">
    <div class="card-header">
        <br />
        <h4 class="display-6 text-warning text-center text-bold">PRESCRIPTION FORM </h4>
    </div>
</div>

<section class="content">
    <div class="container-fluid">
        <div class="row justify-content-center">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-body">
                        <form id="orderForm" method="post" action="@Url.Action("NewPrescription", "Surgeon")" enctype="multipart/form-data">
                            @Html.AntiForgeryToken()
                            <div class="form-group">
                                <label for="SelectedPatientId">Patient:</label>
                                @Html.DropDownListFor(m => m.SelectedPatientId, Model.PatientList, "Select a Patient", new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.SelectedPatientId, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label for="Date">Date:</label>
                                <input type="date" class="form-control" id="Date" name="Date" value="@Model.Date.ToString("yyyy-MM-dd")">
                                @Html.ValidationMessageFor(m => m.Date, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-row">
                                <div class="form-group col-md-12">
                                    <label>Medications:</label>
                                    <select class="form-control" id="medicationSelect" asp-items="Model.MedicationList" multiple></select>
                                    <input type="text" id="quantityInput" class="form-control" placeholder="Quantity" style="margin-top: 10px;" />
                                    <input type="text" id="instructionInput" class="form-control" placeholder="Instruction" style="margin-top: 10px;" />
                                    <button type="button" id="addMedication" class="btn btn-warning text-bold" style="margin-top: 10px;">Add</button>
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                <label>Selected Medications:</label>
                                <ul id="medicationList">
                                    @for (int i = 0; i < Model.SelectedMedications.Count; i++)
                                    {
                                        <li>
                                            @Html.HiddenFor(m => m.SelectedMedications[i].StockID)
                                            @Html.HiddenFor(m => m.SelectedMedications[i].MedicationName)
                                            @Html.HiddenFor(m => m.SelectedMedications[i].Quantity)
                                            @Html.HiddenFor(m => m.SelectedMedications[i].Instruction)
                                            @Model.SelectedMedications[i].MedicationName - @Model.SelectedMedications[i].Quantity - @Model.SelectedMedications[i].Instruction
                                        </li>
                                    }
                                </ul>
                            </div>
                            <div class="form-group">
                                <label for="Urgency">Urgency:</label>
                                <input type="checkbox" id="Urgency" name="Urgency" value="true">
                                <input type="hidden" name="Urgency" value="false">
                            </div>
                            <div class="text-center">
                                <input type="submit" value="Add" class="btn btn-warning" />
                                <button type="button" class="btn btn-danger" onclick="location.href='@Url.Action("Dashboard", "Surgeon")'">Back</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    document.getElementById('addMedication').addEventListener('click', function () {
        var selectedOptions = Array.from(document.getElementById('medicationSelect').selectedOptions);
        var quantity = document.getElementById('quantityInput').value;
        var instruction = document.getElementById('instructionInput').value;
        var medicationList = document.getElementById('medicationList');

        selectedOptions.forEach(function (option) {
            var li = document.createElement('li');
            li.textContent = option.text + ' - ' + quantity + ' - ' + instruction;

            var hiddenStockId = document.createElement('input');
            hiddenStockId.type = 'hidden';
            hiddenStockId.name = 'SelectedMedications[' + medicationList.children.length + '].StockID';
            hiddenStockId.value = option.value;
            li.appendChild(hiddenStockId);

            var hiddenMedicationName = document.createElement('input');
            hiddenMedicationName.type = 'hidden';
            hiddenMedicationName.name = 'SelectedMedications[' + medicationList.children.length + '].MedicationName';
            hiddenMedicationName.value = option.text;
            li.appendChild(hiddenMedicationName);

            var hiddenQuantity = document.createElement('input');
            hiddenQuantity.type = 'hidden';
            hiddenQuantity.name = 'SelectedMedications[' + medicationList.children.length + '].Quantity';
            hiddenQuantity.value = quantity;
            li.appendChild(hiddenQuantity);

            var hiddenInstruction = document.createElement('input');
            hiddenInstruction.type = 'hidden';
            hiddenInstruction.name = 'SelectedMedications[' + medicationList.children.length + '].Instruction';
            hiddenInstruction.value = instruction;
            li.appendChild(hiddenInstruction);

            medicationList.appendChild(li);
        });

        // Clear inputs after adding
        document.getElementById('medicationSelect').selectedIndex = -1;
        document.getElementById('quantityInput').value = '';
        document.getElementById('instructionInput').value = '';
    });
</script>