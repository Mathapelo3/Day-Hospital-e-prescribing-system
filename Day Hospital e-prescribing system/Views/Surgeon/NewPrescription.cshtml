@model Day_Hospital_e_prescribing_system.ViewModel.NewPatientPrescriptionViewModel
@{
    ViewData["Title"] = "NewPrescription";
    Layout = "~/Views/Shared/SurgeonLayout.cshtml";
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

<div class="card">
    <div class="card-header">
        <br />
        <h4 class="display-6 text-warning text-center text-bold">PRESCRIPTION FORM </h4>
    </div>
</div>

<section class="content">
    <div class="container-fluid">
        <div class="row justify-content-center">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-body">
                        <form id="prescriptionForm" method="post" asp-action="NewPrescription" asp-controller="Surgeon">
                            @Html.AntiForgeryToken()
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                            <div class="form-group">
                                <label asp-for="SelectedPatientId">Patient:</label>
                                <select asp-for="SelectedPatientId" asp-items="Model.PatientList" class="form-control">
                                    <option value="">Select a Patient</option>
                                </select>
                                <span asp-validation-for="SelectedPatientId" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="Date">Date:</label>
                                <input asp-for="Date" class="form-control" type="date">
                                <span asp-validation-for="Date" class="text-danger"></span>
                            </div>

                            <div class="form-row">
                                <div class="form-group col-md-12">
                                    <label for="medicationSelect">Medication:</label>
                                    <select id="medicationSelect" asp-items="Model.MedicationList" class="form-control">
                                        <option value="">Select Medication</option>
                                    </select>
                                </div>
                                <div class="form-group col-md-4">
                                    <label for="quantityInput">Quantity:</label>
                                    <input type="text" id="quantityInput" class="form-control" />
                                </div>
                                <div class="form-group col-md-7">
                                    <label for="instructionInput">Instruction:</label>
                                    <input type="text" id="instructionInput" class="form-control" />
                                </div>
                                <div class="form-group col-md-1">
                                    <label>&nbsp;</label>
                                    <button type="button" class="btn btn-primary form-control" id="addMedication">
                                        <i class="fas fa-plus"></i>
                                    </button>
                                </div>
                            </div>

                            <div class="form-group">
                                <label>Selected Medications:</label>
                                <ul id="medicationList" class="list-group">
                                </ul>
                            </div>

                            <div class="form-group">
                                <label asp-for="Urgency">Urgency:</label>
                                <input asp-for="Urgency" type="checkbox">
                            </div>

                            <div class="text-center">
                                <input type="submit" value="Add" class="btn btn-warning text-bold" />
                                <a asp-action="Dashboard" asp-controller="Surgeon" class="btn btn-danger text-bold">Back</a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    // Function to check for allergies
    async function checkAllergy(patientId, stockId) {
        try {
            const response = await fetch('/Surgeon/CheckAllergy', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ patientId, stockId })
            });

            const data = await response.json();
            return data;
        } catch (error) {
            console.error('Error checking allergies:', error);
            return { hasAllergy: false, message: null };
        }
    }

    // Function to update medication indices
    function updateMedicationIndices() {
        var medicationItems = document.querySelectorAll('#medicationList li');
        medicationItems.forEach((item, index) => {
            var inputs = item.querySelectorAll('input[type="hidden"]');
            inputs.forEach(input => {
                var name = input.getAttribute('name');
                var newName = name.replace(/\[\d+\]/, `[${index}]`);
                input.setAttribute('name', newName);
            });
        });
    }

    // Add Medication Button Click Handler
    document.getElementById('addMedication').addEventListener('click', async function () {
        var select = document.getElementById('medicationSelect');
        var patientSelect = document.getElementById('SelectedPatientId');
        var option = select.options[select.selectedIndex];
        var quantity = document.getElementById('quantityInput').value;
        var instruction = document.getElementById('instructionInput').value;
        var medicationList = document.getElementById('medicationList');

        // Validate patient selection
        if (!patientSelect.value) {
            alert('Please select a patient first.');
            patientSelect.focus();
            return;
        }

        // Validate medication inputs
        if (!option || !option.value) {
            alert('Please select a medication.');
            select.focus();
            return;
        }

        if (!quantity) {
            alert('Please enter a quantity.');
            document.getElementById('quantityInput').focus();
            return;
        }

        if (!instruction) {
            alert('Please enter instructions.');
            document.getElementById('instructionInput').focus();
            return;
        }

        // Check for allergies before adding medication
        const allergyCheck = await checkAllergy(patientSelect.value, option.value);

        if (allergyCheck.hasAllergy) {
            alert(allergyCheck.message);
            select.focus();
            return;
        }

        // Create new medication list item
        var li = document.createElement('li');
        var index = medicationList.children.length;

        li.innerHTML = `
                ${option.text} - ${quantity} - ${instruction}
                <input type="hidden" name="SelectedMedications[${index}].StockID" value="${option.value}" />
                <input type="hidden" name="SelectedMedications[${index}].MedicationName" value="${option.text}" />
                <input type="hidden" name="SelectedMedications[${index}].Quantity" value="${quantity}" />
                <input type="hidden" name="SelectedMedications[${index}].Instruction" value="${instruction}" />
                <button type="button" class="btn btn-danger btn-sm float-right remove-medication">
                    <i class="fas fa-times"></i>
                </button>
            `;

        li.className = 'list-group-item d-flex justify-content-between align-items-center';
        medicationList.appendChild(li);

        // Clear inputs after adding
        select.selectedIndex = 0;
        document.getElementById('quantityInput').value = '';
        document.getElementById('instructionInput').value = '';
    });

    // Remove Medication Button Click Handler
    document.getElementById('medicationList').addEventListener('click', function (e) {
        if (e.target.classList.contains('remove-medication') || e.target.closest('.remove-medication')) {
            e.target.closest('li').remove();
            updateMedicationIndices();
        }
    });

    // Form Submit Handler
    document.getElementById('prescriptionForm').addEventListener('submit', async function (e) {
        e.preventDefault();

        var patientId = document.getElementById('SelectedPatientId').value;
        var medications = document.querySelectorAll('#medicationList li input[name$="].StockID"]');

        if (!patientId) {
            alert('Please select a patient.');
            return;
        }

        if (medications.length === 0) {
            alert('Please add at least one medication to the prescription.');
            return;
        }

        // Check all medications for allergies one final time
        for (let medication of medications) {
            const allergyCheck = await checkAllergy(patientId, medication.value);
            if (allergyCheck.hasAllergy) {
                alert(`Cannot submit prescription: ${allergyCheck.message}`);
                return;
            }
        }

        // If all checks pass, submit the form
        this.submit();
    });

    // Patient Selection Change Handler
    document.getElementById('SelectedPatientId').addEventListener('change', function () {
        // Clear medication list when patient changes
        document.getElementById('medicationList').innerHTML = '';
        // Reset medication selection
        document.getElementById('medicationSelect').selectedIndex = 0;
        // Clear quantity and instruction inputs
        document.getElementById('quantityInput').value = '';
        document.getElementById('instructionInput').value = '';
    });

    // Initialize date field to today if empty
    window.addEventListener('load', function () {
        var dateField = document.querySelector('input[type="date"]');
        if (!dateField.value) {
            var today = new Date().toISOString().split('T')[0];
            dateField.value = today;
        }
    });

    // Optional: Add input validation for quantity
    document.getElementById('quantityInput').addEventListener('input', function (e) {
        // Remove any non-numeric characters
        this.value = this.value.replace(/[^\d]/g, '');

        // Ensure the value is positive
        if (this.value <= 0) {
            this.value = '';
        }
    });
</script>