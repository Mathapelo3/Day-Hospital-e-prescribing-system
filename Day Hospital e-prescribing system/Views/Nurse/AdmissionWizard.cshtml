
@{
    ViewData["Title"] = "AdmissionWizard";
    Layout = "~/Views/Shared/NurseLayout.cshtml";
}

<!DOCTYPE html>
<html>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Raleway" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<style>
    * {
        box-sizing: border-box;
    }

    body {
        background-color: #f1f1f1;
    }

    #regForm {
        background-color: #ffffff;
        margin: 100px auto;
        font-family: Raleway;
        padding: 40px;
        width: 70%;
        min-width: 300px;
    }

    h1 {
        text-align: center;
    }

    input {
        padding: 10px;
        width: 100%;
        font-size: 17px;
        font-family: Raleway;
        border: 1px solid #aaaaaa;
    }

        /* Mark input boxes that gets an error on validation: */
        input.invalid {
            background-color: #ffdddd;
        }

    /* Hide all steps by default: */
    .tab {
        display: none;
    }

    button {
        background-color: #04AA6D;
        color: #ffffff;
        border: none;
        padding: 10px 20px;
        font-size: 17px;
        font-family: Raleway;
        cursor: pointer;
    }

        button:hover {
            opacity: 0.8;
        }

    #prevBtn {
        background-color: #bbbbbb;
    }

    /* Make circles that indicate the steps of the form: */
    .step {
        height: 15px;
        width: 15px;
        margin: 0 2px;
        background-color: #bbbbbb;
        border: none;
        border-radius: 50%;
        display: inline-block;
        opacity: 0.5;
    }

        .step.active {
            opacity: 1;
        }

        /* Mark the steps that are finished and valid: */
        .step.finish {
            background-color: #04AA6D;
        }
</style>
<div class="card">
    <div class="card-header">
        <div class="text-center ">
        <h3 class="display-6 text-primary text-center text-bold">BOOKED PATIENTS</h3>
    </div>
</div>
<body>
        <!-- Search bar -->
        <form id="filterForm" asp-action="AdmissionWizard" method="get">
            <div class="form-row">
                <div class="col-md-3">
                    <div class="input-group">
                        <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control" placeholder="Search by surname" />
                        <div class="input-group-append">
                            <button type="submit" class="btn btn-secondary">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                    </div>
                </div>
        <div class="card">
            <div class="card-header">
                <div class="text-center ">
                </div>
                    <div class="container-fluid">
                <div class="row">
                    <div class="form-group col-6">
                        <label for="startDate">Search Date:</label>
                                <input type="date" name="admissionDate" value="@ViewData["CurrentDate"]" class="form-control" />
                    </div>
                    @* <div class="form-group col-6">
                    <label class="form-label">Axtimate Time</label>
                    <input class="form-control"  type="time" />
                    </div>*@



                    <table class="table table-striped table-bordered" id="myTable">
                        <thead>

                            <tr>
                                <th>Name</th>
                                <th>Date</th>
                                <th>Time Slot</th>
                                 <th>Treatment Code</th>
                                 <th>Theatre</th>
                                 <th>Surgeon</th>
                                 <th>Anaesthesiologist</th>
                                <th></th>


                            </tr>
                        </thead>
                        <tbody>

                                            @foreach (var item in Model)
                                            {
                                        <tr>
                                            <td>@item.Patient</td>
                                            <td>@item.Date.ToShortDateString()</td>
                                            <td>@item.Time</td>
                                            <td>@item.Surgery_TreatmentCode</td>
                                            <td>@item.Theatre</td>
                                            <td>@item.Surgeon</td>
                                            <td>@item.Anaesthesiologist</td>
                                            <td><a href="@Url.Action("Ward", "Nurse", new { id = item.PatientID })" type="button" class="add btn-primary" id="add-button">Admit</a></td>
                                        </tr>
                                            }
                               @* <td><input type="button" class="add btn-primary" id="add-button" value="Admit"></td>


                            </tr>*@

                        </tbody>
                    </table>

                </div>
            </div>

          
    </form>

    <script>
        var currentTab = 0; // Current tab is set to be the first tab (0)
        showTab(currentTab); // Display the current tab

        function showTab(n) {
            // This function will display the specified tab of the form...
            var x = document.getElementsByClassName("tab");
            x[n].style.display = "block";
            //... and fix the Previous/Next buttons:
            if (n == 0) {
                document.getElementById("prevBtn").style.display = "none";
            } else {
                document.getElementById("prevBtn").style.display = "inline";
            }
            if (n == (x.length - 1)) {
                document.getElementById("nextBtn").innerHTML = "Submit";
            } else {
                document.getElementById("nextBtn").innerHTML = "Next";
            }
            //... and run a function that will display the correct step indicator:
            fixStepIndicator(n)
        }

        function nextPrev(n) {
            // This function will figure out which tab to display
            var x = document.getElementsByClassName("tab");
            // Exit the function if any field in the current tab is invalid:
            if (n == 1 && !validateForm()) return false;
            // Hide the current tab:
            x[currentTab].style.display = "none";
            // Increase or decrease the current tab by 1:
            currentTab = currentTab + n;
            // if you have reached the end of the form...
            if (currentTab >= x.length) {
                // ... the form gets submitted:
                document.getElementById("regForm").submit();
                return false;
            }
            // Otherwise, display the correct tab:
            showTab(currentTab);
        }

        function validateForm() {
            // This function deals with validation of the form fields
            var x, y, i, valid = true;
            x = document.getElementsByClassName("tab");
            y = x[currentTab].getElementsByTagName("input");
            // A loop that checks every input field in the current tab:
            for (i = 0; i < y.length; i++) {
                // If a field is empty...
                if (y[i].value == "") {
                    // add an "invalid" class to the field:
                    y[i].className += " invalid";
                    // and set the current valid status to false
                    valid = false;
                }
            }
            // If the valid status is true, mark the step as finished and valid:
            if (valid) {
                document.getElementsByClassName("step")[currentTab].className += " finish";
            }
            return valid; // return the valid status
        }

        function fixStepIndicator(n) {
            // This function removes the "active" class of all steps...
            var i, x = document.getElementsByClassName("step");
            for (i = 0; i < x.length; i++) {
                x[i].className = x[i].className.replace(" active", "");
            }
            //... and adds the "active" class on the current step:
            x[n].className += " active";
        }
    </script>

</body>
</html>           