@model IEnumerable<Day_Hospital_e_prescribing_system.ViewModel.AdmittedPatientsVM>
@{
    ViewData["Title"] = "PatientsVitals";
    Layout = "~/Views/Shared/NurseLayout.cshtml";
}

<div class="card">
    <div class="card-header">
        <div class="text-center ">
            <h3 class="display-6 text-primary text-center text-bold">ADD PATIENT'S VITALS</h3>
        </div>
    </div>
    </div>
<br />
    <body>
        <form asp-action="PatientsVitals" method="get" class="form-inline mb-3">

            <br />
            @* <div class="input-group rounded">
            <input type="search" class="form-control rounded" placeholder="Search" aria-label="Search" aria-describedby="search-addon" />
            <span class="input-group-text border-0" id="search-addon">
            <i class="fas fa-search"></i>
            </span>
            </div>*@
            <br />
              <br />
            <br />
            <br />
            <div class="card">
                <div class="body">
                    <div class="card-header text-bold">
                        Patients
                    </div>
                    <div class="card-body">
                        <div class="container-fluid">
                            <div class="row">
                                <table class="table table-striped table-bordered" id="myTable">
                                    <thead>

                                        <tr>
                                            <th>Patient</th>
                                            <th>Gender</th>
                                           @* <th>Admission Date</th>
                                            <th>Admission Time</th>*@
                                            @*<th>Ward</th>*@
                                           @* <th>Bed</th>*@
                                            <th>TreatmentCode</th>
                                            <th>Surgeon</th>
                                            <th>Anaesthesiologist</th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model)
                                        {
                                            <tr>
                                                <td>@item.Patients</td>
                                                <td>@item.Gender</td>
                                               @* <td>@item.Date.ToShortDateString()</td>
                                                <td>@item.Time</td>
                                                <td>@item.Bed</td>*@
                                                <td>@item.TreatmentCodes</td>
                                                <td>@item.Surgeons</td>
                                                <td>@item.Anaesthesiologists</td>
                                                <td>
                                                    @if (item != null)
                                                    {
                                                    <a asp-action="DisplayVitals" asp-route-selectedId="@item.AdmissionID" class="btn btn-primary">
                                                            Add Vitals
                                                        </a>
                                                    }

                                                </td>
                                            </tr>
                                        }

                                    </tbody>
                                </table>

                            </div>
                        </div>
                        @* <div style="overflow:auto;">
                        <div style="float:right;">
                        <button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
                        <button type="button" id="nextBtn" onclick="nextPrev(1)">Finish</button>
                        </div>
                        </div>*@
                        <!-- Circles which indicates the steps of the form: -->
                        @*<div style="text-align:center;margin-top:40px;">
                        <span class="step"></span>
                        <span class="step"></span>
                        <span class="step"></span>
                        <span class="step"></span>
                        <span class="step"></span>
                        <span class="step"></span>
                        <span class="step"></span>
                        </div>*@
        </form>
        <script>
            var currentTab = 0; // Current tab is set to be the first tab (0)
            showTab(currentTab); // Display the current tab

            function showTab(n) {
                // This function will display the specified tab of the form...
                var x = document.getElementsByClassName("tab");
                x[n].style.display = "block";
                //... and fix the Previous/Next buttons:
                if (n == 0) {
                    document.getElementById("prevBtn").style.display = "none";
                } else {
                    document.getElementById("prevBtn").style.display = "inline";
                }
                if (n == (x.length - 1)) {
                    document.getElementById("nextBtn").innerHTML = "Submit";
                } else {
                    document.getElementById("nextBtn").innerHTML = "Next";
                }
                //... and run a function that will display the correct step indicator:
                fixStepIndicator(n)
            }

            function nextPrev(n) {
                // This function will figure out which tab to display
                var x = document.getElementsByClassName("tab");
                // Exit the function if any field in the current tab is invalid:
                if (n == 1 && !validateForm()) return false;
                // Hide the current tab:
                x[currentTab].style.display = "none";
                // Increase or decrease the current tab by 1:
                currentTab = currentTab + n;
                // if you have reached the end of the form...
                if (currentTab >= x.length) {
                    // ... the form gets submitted:
                    document.getElementById("regForm").submit();
                    return false;
                }
                // Otherwise, display the correct tab:
                showTab(currentTab);
            }

            function validateForm() {
                // This function deals with validation of the form fields
                var x, y, i, valid = true;
                x = document.getElementsByClassName("tab");
                y = x[currentTab].getElementsByTagName("input");
                // A loop that checks every input field in the current tab:
                for (i = 0; i < y.length; i++) {
                    // If a field is empty...
                    if (y[i].value == "") {
                        // add an "invalid" class to the field:
                        y[i].className += " invalid";
                        // and set the current valid status to false
                        valid = false;
                    }
                }
                // If the valid status is true, mark the step as finished and valid:
                if (valid) {
                    document.getElementsByClassName("step")[currentTab].className += " finish";
                }
                return valid; // return the valid status
            }

            function fixStepIndicator(n) {
                // This function removes the "active" class of all steps...
                var i, x = document.getElementsByClassName("step");
                for (i = 0; i < x.length; i++) {
                    x[i].className = x[i].className.replace(" active", "");
                }
                //... and adds the "active" class on the current step:
                x[n].className += " active";
            }
        </script>

    </body>
    </html>








