@model Day_Hospital_e_prescribing_system.ViewModel.AdministerMedicationVM
@{
    ViewData["Title"] = "AdministerMeds";
    Layout = "~/Views/Shared/NurseLayout.cshtml";
}

<style>
    * {
        box-sizing: border-box;
    }

    body {
        background-color: #f1f1f1;
    }

    #regForm {
        background-color: #ffffff;
        margin: 100px auto;
        font-family: Raleway;
        padding: 40px;
        width: 70%;
        min-width: 300px;
    }

    h1 {
        text-align: center;
    }

    input {
        padding: 10px;
        width: 100%;
        font-size: 17px;
        font-family: Raleway;
        border: 1px solid #aaaaaa;
    }

        /* Mark input boxes that gets an error on validation: */
        input.invalid {
            background-color: #ffdddd;
        }

    /* Hide all steps by default: */
    .tab {
        display: none;
    }

    button {
        background-color: #007bff;
        color: #ffffff;
        border: none;
        padding: 10px 20px;
        font-size: 17px;
        font-family: Raleway;
        cursor: pointer;
    }

        button:hover {
            opacity: 0.8;
        }

    #prevBtn {
        background-color: #bbbbbb;
    }

    /* Make circles that indicate the steps of the form: */
    .step {
        height: 15px;
        width: 15px;
        margin: 0 2px;
        background-color: #bbbbbb;
        border: none;
        border-radius: 50%;
        display: inline-block;
        opacity: 0.5;
    }

        .step.active {
            opacity: 1;
        }

        /* Mark the steps that are finished and valid: */
        .step.finish {
            background-color: #04AA6D;
        }
</style>
<div class="card">
    <div class="card-header">
        <div class="text-center ">
            <h3 class="display-6 text-primary text-center text-bold">ADMINISTER MEDICATION</h3>
        </div>
    </div>
    <form asp-action="AdministerMeds" method="post">
         <input type="hidden" asp-for="PrescriptionID" />
       
      @*  <input  asp-for="PrescriptionID" value="@Model.PrescriptionID" />*@
        <div class="card">
            <div class="body">
                <div class="card-header text-bold">
                    @Model.Name @Model.Surname
                </div>
                @Html.AntiForgeryToken()
                  <div asp-validation-summary="All" class="text-danger"></div>
                <div class="card">
                    <div class="card-header">
                        <div class="text-center ">
                        </div>
                        <div class="container-fluid">

                            <div class="form-group">
                                <label for="date">Date:</label>
                                <input type="date" asp-for="Date" class="form-control" id="date" name="date">
                                    <span class="text-danger" asp-validation-for="Date"></span>
                            </div>
                            <div class="form-group">
                                <label for="time">Time:</label>
                                <input class="form-control" asp-for="Time" type="time" />
                                 <span class="text-danger" asp-validation-for="Time"></span>
                            </div>
                            <div class="form-row">
                                <div class="form-group col-md-3">
                                    <label for="medication">Medication:</label>
                                    <input type="text" value="@Model.Medication" readonly class="form-control" />
                                </div>

                                  <div class="form-group col-md-3">
                                <label for="quantity">Quantity:</label>
                                    <input type="text" value="@Model.Quantity" readonly class="form-control" />

                                   

                                </div>

                              @*  <div class="form-group col-md-1">
                                    <label>&nbsp;</label>
                                    <button type="button" class="btn btn-primary form-control" id="addMedication">
                                        <i class="fas fa-plus"></i> <!-- Font Awesome plus icon -->
                                    </button>
                                </div>*@
                            </div>
                            <div class="form-group">
                                <label for="surgeon">Administered:</label>
                                <input type="number" asp-for="Administer" class="form-control" min="1" max="3" step="1"/>
                                 <span class="text-danger" asp-validation-for="Administer"></span>

                            </div>



                            <div style="overflow:auto;">
                                <div style="float:right;">
                                    @*  <button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>*@
                                    <button type="submit" id="nextBtn" onclick="nextPrev(1)">Save</button>
                                </div>
                            </div>


                        </div>
                    </div>

                </div>
    </form>
</div>

<script>
    var currentTab = 0; // Current tab is set to be the first tab (0)
    showTab(currentTab); // Display the current tab

    function showTab(n) {
        // This function will display the specified tab of the form...
        var x = document.getElementsByClassName("tab");
        x[n].style.display = "block";
        //... and fix the Previous/Next buttons:
        if (n == 0) {
            document.getElementById("prevBtn").style.display = "none";
        } else {
            document.getElementById("prevBtn").style.display = "inline";
        }
        if (n == (x.length - 1)) {
            document.getElementById("nextBtn").innerHTML = "Submit";
        } else {
            document.getElementById("nextBtn").innerHTML = "Next";
        }
        //... and run a function that will display the correct step indicator:
        fixStepIndicator(n)
    }

    function nextPrev(n) {
        // This function will figure out which tab to display
        var x = document.getElementsByClassName("tab");
        // Exit the function if any field in the current tab is invalid:
        if (n == 1 && !validateForm()) return false;
        // Hide the current tab:
        x[currentTab].style.display = "none";
        // Increase or decrease the current tab by 1:
        currentTab = currentTab + n;
        // if you have reached the end of the form...
        if (currentTab >= x.length) {
            // ... the form gets submitted:
            document.getElementById("regForm").submit();
            return false;
        }
        // Otherwise, display the correct tab:
        showTab(currentTab);
    }

    function validateForm() {
        // This function deals with validation of the form fields
        var x, y, i, valid = true;
        x = document.getElementsByClassName("tab");
        y = x[currentTab].getElementsByTagName("input");
        // A loop that checks every input field in the current tab:
        for (i = 0; i < y.length; i++) {
            // If a field is empty...
            if (y[i].value == "") {
                // add an "invalid" class to the field:
                y[i].className += " invalid";
                // and set the current valid status to false
                valid = false;
            }
        }
        // If the valid status is true, mark the step as finished and valid:
        if (valid) {
            document.getElementsByClassName("step")[currentTab].className += " finish";
        }
        return valid; // return the valid status
    }

    function fixStepIndicator(n) {
        // This function removes the "active" class of all steps...
        var i, x = document.getElementsByClassName("step");
        for (i = 0; i < x.length; i++) {
            x[i].className = x[i].className.replace(" active", "");
        }
        //... and adds the "active" class on the current step:
        x[n].className += " active";
    }
</script>

</html>








